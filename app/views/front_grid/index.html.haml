= render :partial => 'categories/index', :locals => { :active_category => @active_category }
- if @display_banner
  %header#machovy_banner.home-page.center
    .row
      = render :partial => 'shared/flash_messages'
    .row
      .large-6.columns.divide-right
        .large-12.columns
          %h2 Collect Merchandise, Build&nbsp;Your&nbsp;Lifestyle
          %p 
            Machovy is a social shopping experience for men. We are working on building relationships with local businesses to provide premium services in the greater metro area.
      .large-6.columns.divide-left
        .large-6.columns.offset-by-one
          %h3 Are you a Merchant?<br/> Submit your deal today.
        .large-6.columns
          %a{:href => get_featured_path, :class => 'learn-more'}
            Learn More
            %i.icon-angle-right
    .toggle
      %span{:onclick => "hide_machovy_banner();", :class => 'btn-toggle toggle'}
        %i.icon-angle-up
        Alright, Got it!
        %i.icon-angle-up
- else
  %header#machovy_banner.home-page.center
    .row
      = render :partial => 'shared/flash_messages'  
.main-wrap.display_front_page
  #container
    - if @empty_layout
      #deal_content
    - elsif !@layout.nil?
      #deal_content
      - @layout.each do |layout|
        = render :partial => layout[:partial], :locals => { :content => layout[:content] }
      .row.pagination-centered
        %ul.pagination= will_paginate @paged_layout
      #user-options.toolbar-icons{:style => 'display:none;'}
        %a{:href => '#'}
          %i.icon-facebook
        %a{:href => '#'}
          %i.icon-twitter
        %a{:href => '#'}
          %i.icon-envelope
:javascript
  $(function() {
    /* This makes browsers ask every time if you want to share information -- onerous! Turn off for now
     * Maybe turn on just for mobile?
     
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(showPosition,errorCallback, {timeout:10000});
    }*/
   
    // Send width if we're on the main page AND there's no deal content yet
    if (($('.display_front_page').length > 0) && (0 == $('#deal_content').length)) {
      update_width($(window).width(), false);
    }
  
    if (0 == $('#affiliate_layout').length) {
      $.backstretch(["/assets/background-img.jpg"])
    }
    
    var $container = $('#container');
    $container.imagesLoaded( function(){
      $container.isotope({
        itemSelector : '.box',
          masonry : {
            resizable: false, // disable normal resizing
             // set columnWidth to a percentage of container width
            columnWidth: $container.width() / 100,
            gutterWidth: 2
          }
      });                     
  
    $(window).smartresize(function(){
      $container.isotope({
        // update columnWidth to a percentage of container width
        masonry: { columnWidth: $container.width() / 100 }
      });
      //update_width($(window).width(), true);
    });
    });
  
    $(window).on("debouncedresize", function( event ) {
      update_width($(window).width(), true);
    });
  });
    
  function update_width(width, resize) {
    data_obj = {"width": width, "resize": resize}
    
    jQuery.ajax({url:"/width",
                 data: data_obj,
               type: "PUT",
               // Don't need to do anything on success
                 error: function(xhr, ajaxOptions, thrownError) //{ alert('Oh noes!') },
                   { alert('error code: ' + xhr.status + ' \n'+'error:\n' + thrownError ); },
                 async: false
    }); 
  }
  
  function errorCallback(){
    // Don't care
    //alert("Geolocation error!");
  }
  
  function showPosition(position) {
    //alert("Latitude: " + position.coords.latitude + " Longitude: " + position.coords.longitude); 
    data_obj = {"latitude": position.coords.latitude, "longitude": position.coords.longitude  }
    jQuery.ajax({url:"/location",
                 data: data_obj,
                 type: "PUT",
                 // Don't need to do anything on success
                 error: function(xhr, ajaxOptions, thrownError) //{ alert('Oh noes!') },
                   { alert('geolocation error code: ' + xhr.status + ' \n'+'error:\n' + thrownError ); },
                 async: false
    });
  }
