= render :partial => 'categories/index', :locals => { :active_category => @active_category }
= render :partial => 'shared/flash_messages'

= @local_deals.count 
= @little_blocks.count
= @blog_posts.count

%br
-# BigLocal = 1
-# SmallLocal = 2
-# BlogPost = 3
-# Ad/Affiliate = 4
-# HOW TO ENCORPORATE VIDEOS??????
-# ELECTRONICS WILL NOT WORK AS A CATEROGY!!! we need local deals to cycle through -> MOVE ALL TO ESSENTIALS
  -# Put out first local deal ->
    -# state machine, figure out what goes next, render partial
    -# 1 bigblock then only if an event number of blocks put out another big block
    -# = render :partial => 'WhatItIs', :locals => { :promotion => this one}
    -# = render :partial => 'WhatItIs', :locals => { :affiliate => this guy, :ad => this guy}


  -# start a row
    -# start counting columns
    -# State = 1, First Deal
    -# add 2 columns, push out content
      -# randomly push in one of the next object -> small local, affiliate/ad combo, blogpost
      -# until we get to 5 columns
  -# new row
- localdeal_state = 0
- last_state = 0
- next_state = 0
- blog_position = 0
- little_position = 0

- while localdeal_state < @local_deals.count
  -# Start here => put out a big block local deal
  -if last_state == 0
    = render :partial => 'front_grid/biglocal', :locals => { :promotion => @local_deals[localdeal_state]}
    - last_state = 1
    - localdeal_state = 1
  -else
    - case last_state 
    -# Last one was a big local, next is 2 (40%) ,3 (40%), or 4 (20%) 
    - when 1
      - case rand(5)
      - when 0..1
        - next_state = 2
      - when 2..3
        - next_state = 3
      - when 4 
        - next_state = 4
      - else 
        - next_state = 1
    - when 2 # last state was small local, next one is 1, 2, 3, 4 -> Even number of small columns
      - case rand(4)
      - when 0
        - next_state = 1
      - when 1
        - next_state = 2
      - when 2
        - next_state = 3
      - when 3
        - next_state = 4
      - else 
        - next_state = 1
    - when 3 # next one is 1, 2, 4
      - case rand(5)
      - when 0..1
        - next_state = 2
      - when 2..3
        - next_state = 4
      - when 4 
        - next_state = 1
      - else 
        - next_state = 1
    - when 4 # Last one was a ad/affiliate block, next 1, 2, 3
      - case rand(5)
      - when 0..1
        - next_state = 1
      - when 2..3
        - next_state = 2
      - when 4 
        - next_state = 3
      - else 
        - next_state = 1
    - case next_state
    -# Big Local
    - when 1
      - last_state = 1
      = render :partial => 'front_grid/biglocal', :locals => { :promotion => @local_deals[localdeal_state]}
      - localdeal_state = localdeal_state + 1
      -# Small Local
    - when 2
      - last_state = 2
      = render :partial => 'front_grid/littlelocal', :locals => { :promotion => @local_deals[localdeal_state]}
      - localdeal_state = localdeal_state + 1
    - when 3
      - last_state = 3
      = render :partial => 'front_grid/blogpost', :locals => {:blogpost => @blog_posts[blog_position]}
      - blog_position = blog_position + 1
    - when 4 
      - last_state = 4
      = render :partial => 'front_grid/littleblocks', :locals => { :promotion1 => @little_blocks[little_position], :promotion2 => @little_blocks[little_position + 1 ]  }
      - little_position = little_position + 2







