.row.voucher-order
  - if current_user.has_role?(Role::MERCHANT)
    -# button_to makes a form, so they'd appear on separate lines
    -# need promotion id to redisplay the same form (could use Ajax and a partial to render the buttons; let's try it this way first)
    - if v.redeemable?
      .btn.btn-success.btn-large
        = link_to "Redeem", redeem_admin_merchant_voucher_path(v, :status => Voucher::REDEEMED), :method => :put, :confirm => 'Please verify the amount and email. Redeem this voucher?'
      -# It is unredeemable if its status is redeemed, but it hasn't yet been paid (same conditions as payment_owed)
      -# TODO: make this in to elsif
      -#.btn.btn-danger.btn-large
    - if v.unredeemable?
      .btn.btn-danger.btn-large
        = link_to "Unredeem", redeem_admin_merchant_voucher_path(v, :status => Voucher::AVAILABLE), :method => :put, :confirm => 'You will make the voucher available again. Payment will be made after redemption. Are you sure?'
    -# Don't let them return for now (business issue)
      - if v.returnable?
        .btn.btn-danger.btn-large
          = link_to "Return", redeem_admin_merchant_voucher_path(v, :status => Voucher::RETURNED), :method => :put, :confirm => 'Returning a voucher voids it so that no one can use it and no further action is possible. Are you sure?'
  - elsif current_user.has_role?(Role::SUPER_ADMIN)
    - if v.returnable?
      = form_tag redeem_admin_merchant_voucher_path(v), :method => :put do
        = hidden_field_tag :status, Voucher::RETURNED
        = label_tag 'notes', 'Notes about this return'
        = text_area_tag 'notes', nil, :size => '60x3'
        %br/
        = submit_tag 'Return', :class => 'btn.btn-success.btn-large', :onclick => "return confirm('Returning a voucher voids it so that no one can use it, and credits Macho Bucks. No further action is possible. Are you sure?')"
  .six.columns
  .seven.columns    
    %h4== #{v.order.first_name} #{v.order.last_name}
    %h3= link_to v.uuid, printable_qrcode_merchant_voucher_url(v)
    %h4
      %strong= v.status
    - promotion = v.order.promotion
    %h3
      -#= image_tag promotion.teaser_image_url(:contributor_photo).to_s
      = promotion.title
    %span.price-new= number_to_currency(promotion.price)
    %p
      %strong= promotion.limitations    
    %pre= promotion.description
    - if v.order.pickup_order?
      %h4= v.order.pickup_notes
