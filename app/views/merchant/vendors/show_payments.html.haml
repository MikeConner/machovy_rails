.payments-page-container
  .row
    .large-12.columns
      %h1 Merchant payments <small>View your payments</small>
  .row.payments-page
    .large-12.columns
      %h3= I18n.t('customer_service')
      %table
        %thead
          %tr
            %th{:width => '350'} Promotion
            %th Sold
            %th Expired
            %th Returned
            %th Redeemed
            %th{:width => '100'} Total $
            %th{:width => '200'} Machovy Share
            %th{:width => '200'} Merchant Share
            %th Pickup/Delivery
        - @payment_data.each do |promotion_data|
          %tr
            %td= promotion_data[:title]
            %td= promotion_data[:sold]
            %td= promotion_data[:expired]
            %td= promotion_data[:returned]
            %td= promotion_data[:redeemed]
            %td= number_to_currency(promotion_data[:total])
            %td= number_to_currency(promotion_data[:total] - promotion_data[:merchant_share])
            %td= number_to_currency(promotion_data[:merchant_share])
            - if promotion_data[:is_product]
              %td= link_to 'Show Orders', product_view_promotion_path(:id => promotion_data[:id])
            - else
              %td N/A
      - if current_user.has_role?(Role::SUPER_ADMIN) and !@available_vouchers.empty?
        %h3 Available Vouchers   
        %table
          %tr
            %th Date
            %th Promotion
            %th Total $
            %th ID
            %th Customer
            %th Notes
          - @available_vouchers.each do |voucher|
            %tr
              %td= voucher.created_at.try(:strftime, ApplicationHelper::DATE_FORMAT)
              %td= link_to voucher.order.promotion.title, promotion_path(voucher.order.promotion)
              %td= number_to_currency(voucher.order.amount)
              %td= voucher.uuid
              %td== #{voucher.order.first_name} #{voucher.order.last_name} (#{voucher.order.user.email})
              %td= voucher.notes
      - if !@recent_vouchers.empty?
        %h3 Recent voucher redemptions        
        %table
          %tr
            %th Date
            %th Promotion
            %th Total $
            %th ID
            %th Customer
          - @recent_vouchers.each do |voucher|
            %tr
              %td= voucher.redemption_date.try(:strftime, ApplicationHelper::DATETIME_FORMAT)
              %td= link_to voucher.order.promotion.title, promotion_path(voucher.order.promotion)
              %td= number_to_currency(voucher.order.amount)
              %td= voucher.uuid
              %td== #{voucher.order.first_name} #{voucher.order.last_name} (#{voucher.order.user.email})
      %h4 Payment Summary
      - if @vendor.payments.count > 0
        %table
          %tr
            %th Check #
            %th Date
            %th Amount
          - @vendor.payments.each do |payment|
            %tr
              %th= payment.check_number
              %th= payment.check_date.try(:strftime, ApplicationHelper::DATE_FORMAT)
              %th= number_to_currency(payment.amount)
      %p== Total Paid #{number_to_currency(@vendor.total_paid)}
      %p== Amount Owed #{number_to_currency(@vendor.amount_owed)}
      - if current_user.has_role?(Role::SUPER_ADMIN)
        = link_to 'Create Payment', new_merchant_payment_path(:vendor_id => @vendor)
