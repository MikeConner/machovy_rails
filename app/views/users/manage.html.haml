.admin-page-container
  .row
    .large-12.columns
      %h1 Manage Users
  .row
    = render :partial => 'shared/flash_messages'
  .row.admin-page
    .large-3.columns
      = render :partial => 'shared/admin_navigation'
    .large-9.columns
      %h5
        = page_entries_info 
      %p= will_paginate
      %table
        %tbody
          - @users.each do |user|
            %tr
              %td
                -# Cannot edit a SuperAdmin
                - if user.has_role?(Role::SUPER_ADMIN)
                  %em== #{user.email} is a Super Admin
                -else
                  = form_for user, :method => :put, :url => promote_user_path(user) do |f|
                    = user.email
                    = f.collection_select(:role_ids, Role.all, :id, :name, {:selected => user.role_ids, :include_blank => ''})
                    %td
                      %br
                      = f.submit 'Update Role', :class => 'btn tiny success'
                      - if user.can_be_deleted?
                        = link_to 'Delete', user, :method => :delete, :class => 'btn tiny', :data => { confirm: 'Are you sure?' }


      %center= will_paginate @users
      %h3 New Users this week
      .row-fluid
        .span12
          - if @new_users.empty?
            None
          - else
            %ol
              - @new_users.each do |user|
                %li== #{user.email} (#{user.created_at.try(:strftime, ApplicationHelper::DATETIME_FORMAT)})
      %h3 Unconfirmed Users
      .row-fluid
        .span12
          - if @unconfirmed_users.empty?
            None
          - else
            %ol
              - @unconfirmed_users.each do |user|
                - if user.unconfirmed_email.nil?
                  %li== #{user.email} (#{user.created_at.try(:strftime, ApplicationHelper::DATE_FORMAT)}) #{link_to 'Confirm', user_confirmation_path(:confirmation_token => user.confirmation_token)} #{link_to 'Delete', user, :method => :delete, :data => { confirm: 'Are you sure?' }}
                - else
                  %li== #{user.email} (#{user.created_at.try(:strftime, ApplicationHelper::DATE_FORMAT)}) new email: #{user.unconfirmed_email}

    